# Template file for 'genie'
pkgname=genie
version=1141
revision=1
_githash=44918162588e56512ddac6264b08ca6ba4e67468
wrksrc="GENie-${_githash}"
build_style="gnu-makefile"
make_build_args="-C build/gmake.linux"
short_desc="Project generator tool using Lua"
maintainer="a dinosaur <nick@a-dinosaur.com>"
license="BSD-3-Clause"
homepage="https://github.com/bkaradzic/GENie"
distfiles="https://github.com/bkaradzic/GENie/archive/${_githash}.tar.gz"
checksum=6dfc98dfeae0600c5c12a98156b2238effee5c1e2e09e8107477d9e5cfc7278d
patch_args="-Np1"

post_patch() {
	# Unnecessary '-m64' only valid for x86_64, ppc64. Breaks 32-bit & ARM builds
	# so remove it
	vsed 's/-m64//' -i build/gmake.linux/genie.make scripts/genie.lua
}

do_configure() {
	# A copy of GENie is built on the host to run the release script
	# and ensure embeds & generated Makefiles are up to date
	make ${makejobs} CC="${CC_host:-$CC}" CFLAGS="${XBPS_CFLAGS}" LDFLAGS="${XBPS_LDFLAGS}"
	# Generate version.h without using Git
	echo "#define VERSION ${version}" > src/host/version.h
	echo "#define VERSION_STR \"version ${version} (commit ${_githash})\"" >> src/host/version.h
	./bin/linux/genie release
	make ${makejobs} -C build/gmake.linux clean
}

do_install() {
	vbin bin/linux/genie
	vdoc README.md
	vdoc docs/scripting-reference.md
	vlicense LICENSE
}
